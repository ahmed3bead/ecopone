<?php

namespace App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Controllers;

use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Services\{{ moduleNameSingular }}Service;
use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Requests\{{ moduleNameSingular }}ListRequest;
use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Requests\{{ moduleNameSingular }}ShowRequest;
use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Requests\{{ moduleNameSingular }}UpdateRequest;
use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Requests\{{ moduleNameSingular }}DeleteRequest;
use App\CouponApp\Modules\{{ modulePluralPascal }}\{{ portalType }}\Requests\{{ moduleNameSingular }}CreateRequest;
use App\CouponApp\BaseCode\Requests\BaseRequest;

use Illuminate\Http\JsonResponse;
use App\CouponApp\BaseCode\Controllers\BaseApiController;

class {{ className }} extends BaseApiController
{
    protected {{ moduleNameSingular }}Service $service;

    public function __construct({{ moduleNameSingular }}Service $service)
    {
        $this->service = $service;
    }

    public function index({{ moduleNameSingular }}ListRequest $request): JsonResponse|Response
    {
        $data = $this->service->all($request);
        return response()->json($data);
    }

    public function show({{ moduleNameSingular }}ShowRequest $request, $id): JsonResponse|Response
    {
        $data = $this->service->find($request,$id);
        return response()->json($data);
    }

    public function store({{ moduleNameSingular }}CreateRequest $request): JsonResponse|Response
    {
        $data = $this->service->create($request,$request->all());
        return response()->json($data, 201);
    }

    public function update({{ moduleNameSingular }}UpdateRequest $request, $id): JsonResponse|Response
    {
        $data = $this->service->update($request,$request->all(),$id);
        return response()->json($data);
    }

    public function destroy({{ moduleNameSingular }}DeleteRequest  $request, $id): JsonResponse|Response
    {
        $this->service->delete($request,$id);
        return response()->json(null, 204);
    }
}
